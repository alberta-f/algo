def merge(arr, start, mid, end):
    left, right = arr[start:mid], arr[mid:end]
    l, r = 0, 0
    result = []

    while l < len(left) and r < len(right):
        if left[l] <= right[r]:
            result.append(left[l])
            l += 1
        
        else:
            result.append(right[r])
            r += 1

    if l <= len(left):
        for x in left[l:]:
            result.append(x)

    if r <= len(right):
        for x in right[r:]:
            result.append(x)

    return result


def merge_sort(arr, left, right):
    if right - left <= 1:
        return
    mid = (left + right) // 2
    merge_sort(arr, left, mid)
    merge_sort(arr, mid, right)
    arr[left:right] = merge(arr, left, mid, right)

def main():
    n = int(input())
    flowerbeds = []
    for _ in range(n):
        flowerbeds.append([int(i) for i in input().split()])
    merge_sort(flowerbeds, 0, n)
    result = []

    for start, end in flowerbeds:
        if result and (result[-1][0] <= start <= result[-1][1] or result[-1][0] <= end <= result[-1][1]):
            result[-1][0], result[-1][1] = min(result[-1][0], start), max(result[-1][1], end)
        else:
            result.append([start, end])
            
    for flowerbed in result:
        print(*flowerbed)

if __name__ == '__main__':
    main()
    
