def merge(arr, lf, mid, rg):
	array = []
	left, right = arr[lf:mid], arr[mid:rg]
	l = r = 0
	while len(left) + len(right) > len(array):
		if left[l] <= right[r]:
			array.append(left[l])
			l += 1
			
		else:
			array.append(right[r])
			r += 1
			
		if l == len(left):
			array += right[r:]
			break
		
		if r == len(right):
			array += left[l:]
			break
	return array

		
def merge_sort(arr, lf, rg):
	if rg - lf == 1:
		return
	mid = (lf + rg) // 2
	merge_sort(arr, lf, mid)
	merge_sort(arr, mid, rg)
	arr[lf:rg] = merge(arr, lf, mid, rg)


def test():
	a = [1, 4, 9, 2, 10, 11]
	b = merge(a, 0, 3, 6)
	# print(b)
	expected = [1, 2, 4, 9, 10, 11]
	assert b == expected
	c = [1, 4, 2, 10, 1, 2]
	merge_sort(c, 0 , 6)
	# print(c)
	expected = [1, 1, 2, 2, 4, 10]
	assert c == expected

if __name__ == '__main__':
    test()
