import os

LOCAL = os.environ.get('REMOTE_JUDGE', 'false') != 'true'

if LOCAL:
    class Node:  
        def __init__(self, value, left=None, right=None):  
            self.value = value  
            self.right = right  
            self.left = left


def solution(root) -> bool:
    stack = [(root, float('-inf'), float('inf'))]

    while stack:
        node, min_value, max_value = stack.pop()

        if not min_value < node.value < max_value:
            return False

        if node.right:
            stack.append((node.right, node.value, max_value))

        if node.left:
            stack.append((node.left, min_value, node.value))
    
    return True

def test():
    node1 = Node(1, None, None)
    node2 = Node(4, None, None)
    node3 = Node(3, node1, node2)
    node4 = Node(8, None, None)
    node5 = Node(5, node3, node4)
    
    assert solution(node5)
    node2.value = 5
    assert not solution(node5)

if __name__ == '__main__':
    test()
    
