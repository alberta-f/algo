import os

LOCAL = os.environ.get('REMOTE_JUDGE', 'false') != 'true'

if LOCAL:
    class Node:
        def __init__(self, value, left=None, right=None):
            self.value = value
            self.right = right
            self.left = left


def deepth(root):
    if root is None:
        return 0

    else:
        left_debth = deepth(root.left)
        right_debth = deepth(root.right)

        if abs(left_debth - right_debth) > 1:
            return -1

    if left_debth == -1 or right_debth == -1:
       return -1

    return max(left_debth, right_debth) + 1


def solution(root) -> bool:
    return deepth(root) > -1


def test():
    node1 = Node(1)
    node2 = Node(-5)
    node3 = Node(3, node1, node2)
    node4 = Node(10)
    node5 = Node(2, node3, node4)
    assert solution(node5)


if __name__ == '__main__':
    test()
